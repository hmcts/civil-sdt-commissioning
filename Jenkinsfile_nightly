#!groovy

properties([
  // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
  pipelineTriggers([cron('H 05 * * 1-5')])
])

@Library("Infrastructure")

def type = "java"
def product = "civil"
def component = "sdt-commissioning"

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

def vaultOverrides = [
        'preview' : 'aat',
        'spreview': 'saat'
]

withNightlyPipeline(type, product, component) {
  env.IDAM_URL = "https://idam-api.aat.platform.hmcts.net"
  env.TEST_URL = "http://civil-sdt-commissioning-aat.service.core-compute-aat.internal"
  env.Rules = params.SecurityRules
  env.execution_environment = "aat"

  overrideVaultEnvironments(vaultOverrides)

  enableMutationTest()
  enableSecurityScan()

  afterAlways('mutationTest') {
    publishHTML target: [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "build/reports/pitest",
            reportFiles          : "index.html",
            reportName           : "Mutation Test Report"
    ]
  }

  afterAlways('fullFunctionalTest') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'build/reports/**/*'
    publishHTML target: [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "target/site/serenity/",
            reportFiles          : "index.html",
            reportName           : "Functional Tests Report"
    ]
  }
}
